import numpy as np

def self_bert_score(sentences, bertscore):
    '''
    sentences - list of sentences generated by NLG system
    '''
    if len(sentences) == 0:
        return 0, 0, 0
    if len(sentences) == 1:
        return 1, 1, 1
    bert_precision = []
    bert_recall = []
    bert_f1 = []
    sentences = list(sentences)
    for i in range(len(sentences)):
        hyp = [sentences[i]] * (len(sentences) - 1)
        ref = sentences[:i] + sentences[i+1:]
        bertscore_results = bertscore.compute(predictions=hyp, references=ref, lang='en')
        bert_precision.append(np.mean(bertscore_results['precision']))
        bert_recall.append(np.mean(bertscore_results['recall']))
        bert_f1.append(np.mean(bertscore_results['f1']))

    return np.mean(bert_precision), np.mean(bert_recall), np.mean(bert_f1)